//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.2.5.1
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace WorkoutApp.Core.Database
{
   public partial class User
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected User()
      {
         WeighIns = new System.Collections.Generic.HashSet<global::WorkoutApp.Core.Database.WeighIn>();
         Workouts = new System.Collections.Generic.HashSet<global::WorkoutApp.Core.Database.Workout>();

         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static User CreateUserUnsafe()
      {
         return new User();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="username"></param>
      /// <param name="createdat"></param>
      /// <param name="updatedat"></param>
      public User(string username, DateTime createdat, DateTime updatedat)
      {
         if (string.IsNullOrEmpty(username)) throw new ArgumentNullException(nameof(username));
         this._username = username;

         this._createdAt = createdat;

         this._updatedAt = updatedat;

         WeighIns = new System.Collections.Generic.HashSet<global::WorkoutApp.Core.Database.WeighIn>();
         Workouts = new System.Collections.Generic.HashSet<global::WorkoutApp.Core.Database.Workout>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="username"></param>
      /// <param name="createdat"></param>
      /// <param name="updatedat"></param>
      public static User Create(string username, DateTime createdat, DateTime updatedat)
      {
         return new User(username, createdat, updatedat);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Backing field for CreatedAt
      /// </summary>
      protected DateTime _createdAt;
      /// <summary>
      /// When provided in a partial class, allows value of CreatedAt to be changed before setting.
      /// </summary>
      partial void SetCreatedAt(DateTime oldValue, ref DateTime newValue);
      /// <summary>
      /// When provided in a partial class, allows value of CreatedAt to be changed before returning.
      /// </summary>
      partial void GetCreatedAt(ref DateTime result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DateTime CreatedAt
      {
         get
         {
            DateTime value = _createdAt;
            GetCreatedAt(ref value);
            return (_createdAt = value);
         }
         set
         {
            DateTime oldValue = CreatedAt;
            SetCreatedAt(oldValue, ref value);
            if (oldValue != value)
            {
               _createdAt = value;
               OnPropertyChanged();
            }
         }
      }

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /// <summary>
      /// Backing field for Role
      /// </summary>
      protected string _role;
      /// <summary>
      /// When provided in a partial class, allows value of Role to be changed before setting.
      /// </summary>
      partial void SetRole(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of Role to be changed before returning.
      /// </summary>
      partial void GetRole(ref string result);

      /// <summary>
      /// Min length = 1, Max length = 36
      /// </summary>
      [MinLength(1)]
      [MaxLength(36)]
      [StringLength(36)]
      public string Role
      {
         get
         {
            string value = _role;
            GetRole(ref value);
            return (_role = value);
         }
         set
         {
            string oldValue = Role;
            SetRole(oldValue, ref value);
            if (oldValue != value)
            {
               _role = value;
               OnPropertyChanged();
            }
         }
      }

      /// <summary>
      /// Backing field for UpdatedAt
      /// </summary>
      protected DateTime _updatedAt;
      /// <summary>
      /// When provided in a partial class, allows value of UpdatedAt to be changed before setting.
      /// </summary>
      partial void SetUpdatedAt(DateTime oldValue, ref DateTime newValue);
      /// <summary>
      /// When provided in a partial class, allows value of UpdatedAt to be changed before returning.
      /// </summary>
      partial void GetUpdatedAt(ref DateTime result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DateTime UpdatedAt
      {
         get
         {
            DateTime value = _updatedAt;
            GetUpdatedAt(ref value);
            return (_updatedAt = value);
         }
         set
         {
            DateTime oldValue = UpdatedAt;
            SetUpdatedAt(oldValue, ref value);
            if (oldValue != value)
            {
               _updatedAt = value;
               OnPropertyChanged();
            }
         }
      }

      /// <summary>
      /// Backing field for Username
      /// </summary>
      protected string _username;
      /// <summary>
      /// When provided in a partial class, allows value of Username to be changed before setting.
      /// </summary>
      partial void SetUsername(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of Username to be changed before returning.
      /// </summary>
      partial void GetUsername(ref string result);

      /// <summary>
      /// Required, Min length = 1, Max length = 36
      /// </summary>
      [Required]
      [MinLength(1)]
      [MaxLength(36)]
      [StringLength(36)]
      public string Username
      {
         get
         {
            string value = _username;
            GetUsername(ref value);
            return (_username = value);
         }
         set
         {
            string oldValue = Username;
            SetUsername(oldValue, ref value);
            if (oldValue != value)
            {
               _username = value;
               OnPropertyChanged();
            }
         }
      }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      public virtual ICollection<global::WorkoutApp.Core.Database.WeighIn> WeighIns { get; private set; }

      public virtual ICollection<global::WorkoutApp.Core.Database.Workout> Workouts { get; private set; }

   }
}

